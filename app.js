const cfg = require('./config');
const SocksAgent = require('socks5-https-client/lib/Agent');
const fse = require('fs-extra');
const path = require('path');
const request = require('request');

const Calendar = require('telegraf-calendar-telegram');
const Extra = require('telegraf/extra');
const Markup = require('telegraf/markup');
const Telegraf = require('telegraf');

const socksAgent = new SocksAgent({
    socksHost: cfg.proxy.host,
    socksPort: cfg.proxy.port,
    socksUsername: cfg.proxy.login,
    socksPassword: cfg.proxy.psswd,
});
// create the bot
const bot = new Telegraf(cfg.token, {
    telegram: { agent: socksAgent }
});

bot.use(Telegraf.log());

const data = [
    { title: '–°–æ–≥–ª–∞—à–µ–Ω–∏–µ –æ –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç–∏ –±/–Ω', regnum: '–í—Ö-1321/18', regdate: '07.09.2018', author: '–ñ—É—Ä–±–∏–Ω—Å–∫–∏–π –í–ª–∞–¥–∏–º–∏—Ä' },
    { title: '–ê–∫—Ç —Å–≤–µ—Ä–∫–∏ –∑–∞ 1 –ø–æ–ª—É–≥–æ–¥–∏–µ 2018', regnum: '–í—Ö-1318/18', regdate: '07.09.2018', author: '–ñ—É—Ä–±–∏–Ω—Å–∫–∏–π –í–ª–∞–¥–∏–º–∏—Ä' },
    { title: '–û –ø—Ä–æ–¥–ª–µ–Ω–∏–∏ –¥–µ–π—Å—Ç–≤–∏—è –ª—å–≥–æ—Ç–Ω–æ–≥–æ –ø–µ—Ä–∏–æ–¥–∞ ‚Ññ231 –æ—Ç 30.08.2018', regnum: '–í—Ö-1309/18', regdate: '06.09.2018', author: '–°—Ç—Ä–∏–≥–æ –û–ª–µ–≥' },
    { title: '–°—á–µ—Ç–∞ –∑–∞ –∞–≤–≥—É—Å—Ç+ –ø—Ä–æ—Ç–æ–∫–æ–ª —Å–æ–≥–ª–∞—Å–æ–≤–∞–Ω–∏—è —Ü–µ–Ω—ã ‚Ññ4 –æ—Ç 01.08.2018', regnum: '–í—Ö-1285/18', regdate: '04.09.2018', author: '–°—Ç—Ä–∏–≥–æ –û–ª–µ–≥' },
    { title: '–°–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—ã + —Å–æ–ø—Ä–æ–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ ‚Ññ8310 –æ—Ç 16.08.2018', regnum: '–í—Ö-1211/18', regdate: '29.08.2018', author: '–Æ—Ñ–µ—Ä–µ–≤ –ê–Ω–¥—Ä–µ–π' },
];

// instantiate the calendar
const calendar = new Calendar(bot, {
    startWeekDay: 1,
    weekDayNames: ["–ü–Ω", "–í—Ç", "–°—Ä", "–ß—Ç", "–ü—Ç", "–°–±", "–í—Å"],
    monthNames: [
        "–Ø–Ω–≤", "–§–µ–≤", "–ú–∞—Ä", "–ê–ø—Ä", "–ú–∞–π", "–ò—é–Ω",
        "–ò—é–ª", "–ê–≤–≥", "–°–µ–Ω", "–û–∫—Ç", "–ù–æ—è", "–î–µ–∫"
    ]
});

// listen for the selected date event
calendar.setDateListener((ctx, date) => ctx.reply(date));

bot.command('start', ({ from: { username, first_name, last_name }, reply }) => {
    return reply(`–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å, ${first_name} ${last_name}! –í–∞—à ID: @${username}`, Markup
        .keyboard([
            ['‚ò∞ –ú–µ–Ω—é', 'üîç –ü–æ–∏—Å–∫'], // Row1 with 2 buttons
            ['üéÆ –û—Ç–≥—É–ª', '‚ùì –í–æ–ø—Ä–æ—Å'], // Row2 with 2 buttons
            ['üÜò –¢–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞', 'ü§ñ –û —á–∞—Ç-–±–æ—Ç–µ'] // Row2 with 2 buttons
        ])
        .oneTime()
        .resize()
        .extra()
    )
})

bot.hears(/–º–µ–Ω—é/i, ctx => ctx.replyWithHTML('–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ!\n–í–∞—Å –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —á–∞—Ç-–±–æ—Ç –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π —Å–ø—Ä–∞–≤–æ—á–Ω–æ–π —Å–ª—É–∂–±—ã.\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –æ—Ç–≥—É–ª–∞, –Ω–∞–ø–∏—à–∏—Ç–µ <b>[–æ—Ç–≥—É–ª]</b>.\n–î–ª—è –æ—Ñ–æ—Ä–º–ª–µ–Ω–∏—è –∑–∞—è–≤–∫–∏ –≤ —Å–ª—É–∂–±—É —Ç–µ—Ö.–ø–æ–¥–¥–µ—Ä–∂–∫–∏, –Ω–∞–ø–∏—à–∏—Ç–µ <b>[—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞]</b> –∏–ª–∏ <b>[–ø–æ–ª–æ–º–∫–∞]</b>.'));
bot.hears(/–≤–æ–ø—Ä–æ—Å/i, ctx => ctx.replyWithHTML('–û–ø–∏—à–∏—Ç–µ –í–∞—à –≤–æ–ø—Ä–æ—Å, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –ø–æ–¥—Ä–æ–±–Ω–æ.'));
bot.hears(/—Ç–µ—Ö–ø–æ–¥–¥–µ—Ä–∂–∫–∞|–ø–æ–ª–æ–º–∫–∞/i, ctx => {
    ctx.replyWithHTML('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n—Å–∏—Ç—É–∞—Ü–∏—è: <i>[–æ–ø–∏—Å–∞–Ω–∏–µ —Å–∏—Ç—É–∞—Ü–∏–∏]</i>, –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç—å: <i>[–ø–ª–∞–Ω–æ–≤–∞—è/—Å—Ä–µ–¥–Ω—è—è/–≤—ã—Å–æ–∫–∞—è]</i>');
    bot.on('text', ctx => {
        fse.writeFile('./files/tbot_' + ctx.message.chat.id + '-' + ctx.message.message_id + '.json', JSON.stringify(ctx.update, null, 4), (err) => {
            if (err) {
                console.error(err);
                return;
            };
            console.log('*************** JSON file has been created ***************');
        });
        ctx.reply('–°–ø–∞—Å–∏–±–æ, –≤–∞—à–∞ –∑–∞—è–≤–∫–∞ –ø—Ä–∏–Ω—è—Ç–∞!');
    });
});

bot.hears(/–æ—Ç–≥—É–ª/i, ctx => ctx.replyWithHTML('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –æ–ø–∏—à–∏—Ç–µ —Å–∏—Ç—É–∞—Ü–∏—é –≤ —Ñ–æ—Ä–º–∞—Ç–µ:\n<i>[–ø—Ä–∏—á–∏–Ω–∞ –æ—Ç–≥—É–ª–∞]</i>, —Å <i>[–¥–∞—Ç–∞ –Ω–∞—á–∞–ª–∞ –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì]</i> –¥–æ <i>[–¥–∞—Ç–∞ –æ–∫–æ–Ω—á–∞–Ω–∏—è –≤ —Ñ–æ—Ä–º–∞—Ç–µ –î–î.–ú–ú.–ì–ì]</i>.\n–ü—Ä–∏ –≤—ã–±–æ—Ä–µ –¥–∞—Ç—ã –≤—ã –º–æ–∂–µ—Ç–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å –∫–æ–º–∞–Ω–¥—É [/calendar]'));
bot.hears(/–æ —á–∞—Ç-–±–æ—Ç–µ/i, ctx => ctx.replyWithHTML('–Ø - –±–æ—Ç-–ø–æ–º–æ—â–Ω–∏–∫ –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –°–≠–î –Ω–∞ –±–∞–∑–µ EOSfSP.\n–ü–æ –≤—Å–µ–º –≤–æ–ø—Ä–æ—Å–∞–º –æ–±—Ä–∞—â–∞—Ç—å—Å—è:\nsupport@junicsoft.ru'));
bot.hears(/–ø–æ–∏—Å–∫/i, ctx => {
    ctx.replyWithHTML('–ê–∫—Ç–∏–≤–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã:');
    setTimeout(() => {
        data.forEach((item) => {
            ctx.replyWithHTML(`<a href="http://junicsoft.ru">${item.regnum}</a> –æ—Ç ${item.regdate}`);
        });
    }, 800);
});

// retreive the calendar HTML
bot.hears(/calendar/ig, ctx => {

    const today = new Date();
    const minDate = new Date();
    minDate.setMonth(today.getMonth() - 2);
    const maxDate = new Date();
    maxDate.setMonth(today.getMonth() + 2);

    ctx.reply('–í—ã–±–µ—Ä–∏—Ç–µ –¥–∞—Ç—É...', calendar.setMinDate(minDate).setMaxDate(maxDate).getCalendar())
});

// Handle sticker or photo update
bot.on(['sticker', 'photo'], (ctx) => {
    const photoId = ctx.message.photo[ctx.message.photo.length - 1].file_id;
    bot.telegram.getFileLink(photoId).then(result => {
        const filename = 'tbot_' + ctx.message.chat.id + '-' + ctx.message.message_id + '.jpg';
        request.get({
            url: result,
            agentClass: SocksAgent,
            agentOptions: {
                socksHost: cfg.proxy.host,
                socksPort: cfg.proxy.port,
                socksUsername: cfg.proxy.login,
                socksPassword: cfg.proxy.psswd
            }
        })
        .on('error', function (err) {
            console.log(err);
        })
        .pipe(fse.createWriteStream(path.join('./files/', filename)));

    });
});

bot.startPolling();
bot.telegram.getMe().then((bot_informations) => {
    console.log('Bot information:');
    console.log(bot_informations);
    console.log('Server has initialized bot nickname. Nick: ' + bot_informations.username + '\r\n');
});